FROM node:14-alpine
# https://github.com/marcbachmann/node-html-pdf/issues/612

ENV PHANTOMJS_VERSION=2.1.1
ENV PHANTOMJS_PATH=/usr/local/bin/phantomjs

ENV PORT ""
ENV SERVER_URL ""
ENV VERSION ""


RUN apk update && apk add --no-cache fontconfig curl curl-dev && \
    cd /tmp && curl -Ls https://github.com/dustinblackman/phantomized/releases/download/${PHANTOMJS_VERSION}/dockerized-phantomjs.tar.gz | tar xz && \
    cp -R lib lib64 / && \
    cp -R usr/lib/x86_64-linux-gnu /usr/lib && \
    cp -R usr/share /usr/share && \
    cp -R etc/fonts /etc && \
    curl -k -Ls https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-${PHANTOMJS_VERSION}-linux-x86_64.tar.bz2 | tar -jxf - && \
    cp phantomjs-2.1.1-linux-x86_64/bin/phantomjs /usr/local/bin/phantomjs

WORKDIR /
RUN apk update && apk add --no-cache fontconfig curl curl-dev && \
    curl -L -O https://github.com/aws/aws-lambda-base-images/archive/refs/heads/nodejs14.x.zip  && \
    unzip nodejs14.x.zip && \
    rm -rf nodejs14.x.zip && \
    rm -rf Dockerfile.nodejs14.x && \
    mkdir x86_64 && \
    cp -r aws-lambda-base-images-nodejs14.x/x86_64 ./x86_64 && \
    rm -rf aws-lambda-base-images-nodejs14.x
ADD  . ./x86_64

ENV LANG=en_US.UTF-8
ENV TZ=:/etc/localtime
ENV PATH=/var/lang/bin:/usr/local/bin:/usr/bin/:/bin:/opt/bin
ENV LD_LIBRARY_PATH=/var/lang/lib:/lib64:/usr/lib64:/var/runtime:/var/runtime/lib:/var/task:/var/task/lib:/opt/lib
ENV LAMBDA_TASK_ROOT=/var/task
ENV LAMBDA_RUNTIME_DIR=/var/runtime

WORKDIR ${LAMBDA_TASK_ROOT}/temp

COPY ./pdf .

RUN npm run build
RUN mv dist ..

WORKDIR ${LAMBDA_TASK_ROOT}
RUN rm -rf temp

EXPOSE 5603

ENV PORT=5603
ENV VERSION=1

ENTRYPOINT ["lambda.handler"]
