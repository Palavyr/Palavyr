// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Palavyr.Core.Data;

#nullable disable

namespace Palavyr.Core.Data.CodeFirstMigrations
{
    [DbContext(typeof(AppDataContexts))]
    [Migration("20220827022144_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Palavyr.Core.Data.Entities.Account", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AccountLogoUri")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("AccountType")
                        .HasColumnType("integer");

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("ApiKey")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CurrentPeriodEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("DefaultEmailIsVerified")
                        .HasColumnType("boolean");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GeneralFallbackEmailTemplate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GeneralFallbackSubject")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("HasUpgraded")
                        .HasColumnType("boolean");

                    b.Property<string>("IntroIntentId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Locale")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("PaymentInterval")
                        .HasColumnType("integer");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PlanType")
                        .HasColumnType("integer");

                    b.Property<bool>("ShowSeenEnquiries")
                        .HasColumnType("boolean");

                    b.Property<string>("StripeCustomerId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Palavyr.Core.Data.Entities.AccountEmailVerification", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AuthenticationToken")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("EmailVerifications");
                });

            modelBuilder.Entity("Palavyr.Core.Data.Entities.AttachmentLinkRecord", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FileId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IntentId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("IntentId1")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IntentId1");

                    b.ToTable("AttachmentRecords");
                });

            modelBuilder.Entity("Palavyr.Core.Data.Entities.ConversationHistoryMeta", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ConversationId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EmailTemplateUsed")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IntentId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IntentName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFallback")
                        .HasColumnType("boolean");

                    b.Property<string>("Locale")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ResponsePdfId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Seen")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("ConversationRecords");
                });

            modelBuilder.Entity("Palavyr.Core.Data.Entities.ConversationHistoryRow", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ConversationId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("NodeCritical")
                        .HasColumnType("boolean");

                    b.Property<string>("NodeId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NodeType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Prompt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserResponse")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ConversationHistoryRows");
                });

            modelBuilder.Entity("Palavyr.Core.Data.Entities.ConversationNode", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FileId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IntentId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("IntentId1")
                        .HasColumnType("integer");

                    b.Property<bool>("IsAnabranchMergePoint")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAnabranchType")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCritical")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCurrency")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsImageNode")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLoopbackAnchorType")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMultiOptionEditable")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMultiOptionType")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPricingStrategyTableNode")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRoot")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTerminalType")
                        .HasColumnType("boolean");

                    b.Property<string>("NodeChildrenString")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NodeComponentType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NodeId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NodeType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NodeTypeCodeEnum")
                        .HasColumnType("integer");

                    b.Property<string>("OptionPath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PricingStrategyType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ResolveOrder")
                        .HasColumnType("integer");

                    b.Property<bool>("ShouldRenderChildren")
                        .HasColumnType("boolean");

                    b.Property<bool>("ShouldShowMultiOption")
                        .HasColumnType("boolean");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ValueOptions")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IntentId1");

                    b.ToTable("ConversationNodes");
                });

            modelBuilder.Entity("Palavyr.Core.Data.Entities.FileAsset", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FileId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LocationKey")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RiskyNameStem")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("FileAssets");
                });

            modelBuilder.Entity("Palavyr.Core.Data.Entities.Intent", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("EmailIsVerified")
                        .HasColumnType("boolean");

                    b.Property<string>("EmailTemplate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Epilogue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FallbackEmailTemplate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FallbackSubject")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IncludePricingStrategyTableTotals")
                        .HasColumnType("boolean");

                    b.Property<string>("IntentId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IntentName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IntentSpecificEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("Prologue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("SendAttachmentsOnFallback")
                        .HasColumnType("boolean");

                    b.Property<bool>("SendPdfResponse")
                        .HasColumnType("boolean");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("UseIntentFallbackEmail")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Intents");
                });

            modelBuilder.Entity("Palavyr.Core.Data.Entities.Logo", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AccountLogoFileId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Logos");
                });

            modelBuilder.Entity("Palavyr.Core.Data.Entities.PricingStrategyTableMeta", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IntentId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("IntentId1")
                        .HasColumnType("integer");

                    b.Property<string>("PrettyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TableId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TableTag")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TableType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UnitIdEnum")
                        .HasColumnType("integer");

                    b.Property<bool>("UseTableTagAsResponseDescription")
                        .HasColumnType("boolean");

                    b.Property<bool>("ValuesAsPaths")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("IntentId1");

                    b.ToTable("PricingStrategyTableMetas");
                });

            modelBuilder.Entity("Palavyr.Core.Data.Entities.PricingStrategyTables.CategoryNestedThresholdTableRow", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IntentId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ItemId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ItemOrder")
                        .HasColumnType("integer");

                    b.Property<bool>("Range")
                        .HasColumnType("boolean");

                    b.Property<string>("RowId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RowOrder")
                        .HasColumnType("integer");

                    b.Property<string>("TableId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Threshold")
                        .HasColumnType("double precision");

                    b.Property<bool>("TriggerFallback")
                        .HasColumnType("boolean");

                    b.Property<double>("ValueMax")
                        .HasColumnType("double precision");

                    b.Property<double>("ValueMin")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("CategoryNestedThresholdTableRows");
                });

            modelBuilder.Entity("Palavyr.Core.Data.Entities.PricingStrategyTables.CategorySelectTableRow", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IntentId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Range")
                        .HasColumnType("boolean");

                    b.Property<int>("RowOrder")
                        .HasColumnType("integer");

                    b.Property<string>("TableId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("ValueMax")
                        .HasColumnType("double precision");

                    b.Property<double>("ValueMin")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("SimpleSelectTableRows");
                });

            modelBuilder.Entity("Palavyr.Core.Data.Entities.PricingStrategyTables.PercentOfThresholdTableRow", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IntentId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ItemId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ItemOrder")
                        .HasColumnType("integer");

                    b.Property<double>("Modifier")
                        .HasColumnType("double precision");

                    b.Property<bool>("PosNeg")
                        .HasColumnType("boolean");

                    b.Property<bool>("Range")
                        .HasColumnType("boolean");

                    b.Property<string>("RowId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RowOrder")
                        .HasColumnType("integer");

                    b.Property<string>("TableId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Threshold")
                        .HasColumnType("double precision");

                    b.Property<bool>("TriggerFallback")
                        .HasColumnType("boolean");

                    b.Property<double>("ValueMax")
                        .HasColumnType("double precision");

                    b.Property<double>("ValueMin")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("PercentOfThresholds");
                });

            modelBuilder.Entity("Palavyr.Core.Data.Entities.PricingStrategyTables.SelectWithNestedSelectTableRow", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InnerItemName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IntentId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ItemId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ItemOrder")
                        .HasColumnType("integer");

                    b.Property<bool>("Range")
                        .HasColumnType("boolean");

                    b.Property<string>("RowId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RowOrder")
                        .HasColumnType("integer");

                    b.Property<string>("TableId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("ValueMax")
                        .HasColumnType("double precision");

                    b.Property<double>("ValueMin")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("TwoNestedSelectTableRows");
                });

            modelBuilder.Entity("Palavyr.Core.Data.Entities.PricingStrategyTables.SimpleThresholdTableRow", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IntentId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Range")
                        .HasColumnType("boolean");

                    b.Property<string>("RowId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RowOrder")
                        .HasColumnType("integer");

                    b.Property<string>("TableId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Threshold")
                        .HasColumnType("double precision");

                    b.Property<bool>("TriggerFallback")
                        .HasColumnType("boolean");

                    b.Property<double>("ValueMax")
                        .HasColumnType("double precision");

                    b.Property<double>("ValueMin")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("SimpleThresholdTableRows");
                });

            modelBuilder.Entity("Palavyr.Core.Data.Entities.StaticFee", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FeeId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IntentId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Max")
                        .HasColumnType("double precision");

                    b.Property<double>("Min")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("StaticFees");
                });

            modelBuilder.Entity("Palavyr.Core.Data.Entities.StaticTableRow", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FeeId")
                        .HasColumnType("integer");

                    b.Property<string>("IntentId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("PerPerson")
                        .HasColumnType("boolean");

                    b.Property<bool>("Range")
                        .HasColumnType("boolean");

                    b.Property<int>("RowOrder")
                        .HasColumnType("integer");

                    b.Property<int?>("StaticTablesMetaId")
                        .HasColumnType("integer");

                    b.Property<int>("TableOrder")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FeeId");

                    b.HasIndex("StaticTablesMetaId");

                    b.ToTable("StaticTablesRows");
                });

            modelBuilder.Entity("Palavyr.Core.Data.Entities.StaticTablesMeta", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IncludeTotals")
                        .HasColumnType("boolean");

                    b.Property<string>("IntentId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("IntentId1")
                        .HasColumnType("integer");

                    b.Property<bool>("PerPersonInputRequired")
                        .HasColumnType("boolean");

                    b.Property<string>("TableId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TableOrder")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IntentId1");

                    b.ToTable("StaticTablesMetas");
                });

            modelBuilder.Entity("Palavyr.Core.Data.Entities.StripeWebhookReceivedRecord", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<string>("PayloadSignature")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RecordId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("StripeWebhookReceivedRecords");
                });

            modelBuilder.Entity("Palavyr.Core.Data.Entities.Subscription", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ApiKey")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NumIntents")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("Palavyr.Core.Data.Entities.UserSession", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ApiKey")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Expiration")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SessionId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("Palavyr.Core.Data.Entities.WidgetPreference", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ButtonColor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ButtonFontColor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ChatBubbleColor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ChatFontColor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ChatHeader")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FontFamily")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HeaderColor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HeaderFontColor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LandingHeader")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ListFontColor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OptionsHeaderColor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OptionsHeaderFontColor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Placeholder")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SelectListColor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("WidgetState")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("WidgetPreferences");
                });

            modelBuilder.Entity("Palavyr.Core.Data.Entities.AttachmentLinkRecord", b =>
                {
                    b.HasOne("Palavyr.Core.Data.Entities.Intent", null)
                        .WithMany("AttachmentRecords")
                        .HasForeignKey("IntentId1");
                });

            modelBuilder.Entity("Palavyr.Core.Data.Entities.ConversationNode", b =>
                {
                    b.HasOne("Palavyr.Core.Data.Entities.Intent", null)
                        .WithMany("ConversationNodes")
                        .HasForeignKey("IntentId1");
                });

            modelBuilder.Entity("Palavyr.Core.Data.Entities.PricingStrategyTableMeta", b =>
                {
                    b.HasOne("Palavyr.Core.Data.Entities.Intent", null)
                        .WithMany("PricingStrategyTableMetas")
                        .HasForeignKey("IntentId1");
                });

            modelBuilder.Entity("Palavyr.Core.Data.Entities.StaticTableRow", b =>
                {
                    b.HasOne("Palavyr.Core.Data.Entities.StaticFee", "Fee")
                        .WithMany()
                        .HasForeignKey("FeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Palavyr.Core.Data.Entities.StaticTablesMeta", null)
                        .WithMany("StaticTableRows")
                        .HasForeignKey("StaticTablesMetaId");

                    b.Navigation("Fee");
                });

            modelBuilder.Entity("Palavyr.Core.Data.Entities.StaticTablesMeta", b =>
                {
                    b.HasOne("Palavyr.Core.Data.Entities.Intent", null)
                        .WithMany("StaticTablesMetas")
                        .HasForeignKey("IntentId1");
                });

            modelBuilder.Entity("Palavyr.Core.Data.Entities.Intent", b =>
                {
                    b.Navigation("AttachmentRecords");

                    b.Navigation("ConversationNodes");

                    b.Navigation("PricingStrategyTableMetas");

                    b.Navigation("StaticTablesMetas");
                });

            modelBuilder.Entity("Palavyr.Core.Data.Entities.StaticTablesMeta", b =>
                {
                    b.Navigation("StaticTableRows");
                });
#pragma warning restore 612, 618
        }
    }
}
