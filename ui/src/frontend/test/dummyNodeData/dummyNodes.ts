import { ConvoNode, NodeTypeCode } from "@Palavyr-Types";

export const ParentNode: ConvoNode = {
    nodeId: "xyz-1",
    nodeType: "YesNo",
    text: "Test Text",
    nodeChildrenString: "xyz-2,xyz-3",
    isCritical: true,
    isRoot: true,
    intentId: "abc-123",
    optionPath: "",
    valueOptions: "", // an array, but bc of the dtabase we store as a string delimited by |peg|
    id: 0,

    isTerminalType: false,
    isMultiOptionType: false,
    isAnabranchType: false,
    isAnabranchMergePoint: false,
    isLoopbackAnchorType: false,
    shouldRenderChildren: true,
    shouldShowMultiOption: false,
    nodeComponentType: "YesNo",
    isPricingStrategyNode: false,
    isImageNode: false,
    imageId: null,
    resolveOrder: 0,
    dynamicType: null,
    nodeTypeCode: NodeTypeCode.I,
};

export const ChildNode1: ConvoNode = {
    nodeId: "xyz-2",
    nodeType: "",
    text: "Test Text",
    nodeChildrenString: "",
    isCritical: true,
    isRoot: true,
    intentId: "abc-123",
    optionPath: "Yes",
    valueOptions: "", // an array, but bc of the dtabase we store as a string delimited by |peg|
    id: 0,
    isTerminalType: false,
    isMultiOptionType: false,
    isAnabranchType: false,
    isAnabranchMergePoint: false,
    isLoopbackAnchorType: false,
    shouldRenderChildren: true,
    shouldShowMultiOption: false,
    nodeComponentType: "YesNo",
    isPricingStrategyNode: false,
    isImageNode: false,
    imageId: null,
    resolveOrder: 0,
    dynamicType: null,
    nodeTypeCode: NodeTypeCode.I,
};

export const ChildNode2: ConvoNode = {
    nodeId: "xyz-3",
    nodeType: "",
    text: "Test Text",
    nodeChildrenString: "",
    isCritical: true,
    isRoot: true,
    intentId: "abc-123",
    optionPath: "No",
    valueOptions: "", // an array, but bc of the dtabase we store as a string delimited by |peg|
    id: 0,
    isTerminalType: false,
    isMultiOptionType: false,
    isAnabranchType: false,
    isAnabranchMergePoint: false,
    isLoopbackAnchorType: false,
    shouldRenderChildren: true,
    shouldShowMultiOption: false,
    nodeComponentType: "YesNo",
    isPricingStrategyNode: false,
    isImageNode: false,
    imageId: null,
    resolveOrder: 0,
    dynamicType: null,
    nodeTypeCode: NodeTypeCode.I,
};

export const DummyConvo = [ParentNode, ChildNode1, ChildNode2];
