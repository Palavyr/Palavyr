<?xml version="1.0" encoding="UTF-8"?>
<build-type xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" uuid="00665422-12d4-4323-97de-fcc136e881b6" xsi:noNamespaceSchemaLocation="https://www.jetbrains.com/teamcity/schemas/2020.1/project-config.xsd">
  <name>Build, Test, Push to Octopus</name>
  <description>Automatically creates a new release and deploys it to staging</description>
  <settings>
    <options>
      <option name="allowPersonalBuildTriggering" value="false" />
      <option name="buildNumberPattern" value="%dep.ConfigurationManager_CreateVersionNumber.system.build.number%" />
      <option name="maximumNumberOfBuilds" value="3" />
    </options>
    <disabled-settings>
      <setting-ref ref="RUNNER_6" />
    </disabled-settings>
    <parameters />
    <build-runners>
      <runner id="RUNNER_27" name="Package the express server into a zip" type="octopus.pack.package">
        <parameters>
          <param name="octopus_packageformat" value="Zip" />
          <param name="octopus_packageid" value="palavyr.pdfserver" />
          <param name="octopus_packageoutputpath" value="pdf-server/pack" />
          <param name="octopus_packagesourcepath" value="pdf-server/dist" />
          <param name="octopus_packageversion" value="%dep.ConfigurationManager_CreateVersionNumber.system.build.number%" />
          <param name="octopus_publishartifacts" value="true" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_26" name="Package the widget" type="octopus.pack.package">
        <parameters>
          <param name="octopus_packageformat" value="Zip" />
          <param name="octopus_packageid" value="palavyr.widget" />
          <param name="octopus_packageoutputpath" value="widget\pack" />
          <param name="octopus_packagesourcepath" value="widget\dist" />
          <param name="octopus_packageversion" value="%dep.ConfigurationManager_CreateVersionNumber.system.build.number%" />
          <param name="octopus_publishartifacts" value="true" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_25" name="Package the frontend" type="octopus.pack.package">
        <parameters>
          <param name="octopus_packageformat" value="Zip" />
          <param name="octopus_packageid" value="palavyr.frontend" />
          <param name="octopus_packageoutputpath" value="frontend\pack" />
          <param name="octopus_packagesourcepath" value="frontend\dist" />
          <param name="octopus_packageversion" value="%dep.ConfigurationManager_CreateVersionNumber.system.build.number%" />
          <param name="octopus_publishartifacts" value="true" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_28" name="Pack Server API" type="octopus.pack.package">
        <parameters>
          <param name="octopus_packageformat" value="Zip" />
          <param name="octopus_packageid" value="palavyr.server.windows" />
          <param name="octopus_packageoutputpath" value="server\pack" />
          <param name="octopus_packagesourcepath" value="server\publish" />
          <param name="octopus_packageversion" value="%dep.ConfigurationManager_CreateVersionNumber.system.build.number%" />
          <param name="octopus_publishartifacts" value="true" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_29" name="Push to Octopus Cloud" type="octopus.push.package">
        <parameters>
          <param name="octopus_forcepush" value="true" />
          <param name="octopus_host" value="https://palavyr.octopus.app" />
          <param name="octopus_packagepaths"><![CDATA[palavyr.server.windows.%dep.ConfigurationManager_CreateVersionNumber.system.build.number%.zip
palavyr.frontend.%dep.ConfigurationManager_CreateVersionNumber.system.build.number%.zip
palavyr.pdfserver.%dep.ConfigurationManager_CreateVersionNumber.system.build.number%.zip
palavyr.widget.%dep.ConfigurationManager_CreateVersionNumber.system.build.number%.zip]]></param>
          <param name="octopus_space_name" value="Palavyr" />
          <param name="secure:octopus_apikey" value="credentialsJSON:6733b2fc-c52e-47a4-b68b-7e05b68cf00e" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_6" name="Create a new release on Octopus Deploy" type="octopus.create.release">
        <conditions>
          <equals name="teamcity.build.branch.is_default" value="true" />
        </conditions>
        <parameters>
          <param name="octopus_channel_name" value="Main Channel" />
          <param name="octopus_deploymenttimeout" value="00:20:00" />
          <param name="octopus_host" value="https://palavyr.octopus.app" />
          <param name="octopus_project_name" value="Palavyr Configuration Manager" />
          <param name="octopus_releasenumber" value="%dep.ConfigurationManager_CreateVersionNumber.system.build.number%" />
          <param name="octopus_space_name" value="Palavyr" />
          <param name="octopus_version" value="3.0+" />
          <param name="secure:octopus_apikey" value="credentialsJSON:206075a8-c12f-4f17-a3be-213a6915ef08" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
    </build-runners>
    <vcs-settings>
      <vcs-entry-ref root-id="ConfigurationManager_HttpsGithubComPalavyrConfigurationManagerGitRefsHeadsMaster1" />
    </vcs-settings>
    <requirements />
    <build-triggers>
      <build-trigger id="vcsTrigger" type="vcsTrigger">
        <parameters>
          <param name="groupCheckinsByCommitter" value="true" />
          <param name="perCheckinTriggering" value="true" />
          <param name="quietPeriodMode" value="DO_NOT_USE" />
          <param name="triggerRules" value="-:**.md" />
          <param name="watchChangesInDependencies" value="true" />
        </parameters>
      </build-trigger>
    </build-triggers>
    <build-extensions>
      <extension id="BUILD_EXT_8" type="commit-status-publisher">
        <parameters>
          <param name="github_authentication_type" value="token" />
          <param name="github_host" value="https://api.github.com" />
          <param name="publisherId" value="githubStatusPublisher" />
          <param name="secure:github_access_token" value="credentialsJSON:6733b2fc-c52e-47a4-b68b-7e05b68cf00e" />
        </parameters>
      </extension>
      <extension id="BUILD_EXT_9" type="pullRequests">
        <parameters>
          <param name="authenticationType" value="token" />
          <param name="filterAuthorRole" value="MEMBER" />
          <param name="filterTargetBranch" value="+:refs/heads/master" />
          <param name="providerType" value="github" />
          <param name="secure:accessToken" value="credentialsJSON:6733b2fc-c52e-47a4-b68b-7e05b68cf00e" />
        </parameters>
      </extension>
    </build-extensions>
    <dependencies>
      <depend-on sourceBuildTypeId="ConfigurationManager_BuildAndTest">
        <options>
          <option name="run-build-if-dependency-failed" value="CANCEL" />
          <option name="run-build-if-dependency-failed-to-start" value="CANCEL" />
        </options>
      </depend-on>
    </dependencies>
    <cleanup />
  </settings>
</build-type>

