name: Build and Run Tests on pull request
on:
  pull_request:
    branches:
      - main

jobs:
  build-and-test-server:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      STRIPE_API_KEY: ${{secrets.STRIPE_API_KEY}}
      STRIPE_DEVICE_NAME: Palavyr

    steps:
      - name: Generate build number
        id: buildnumber
        uses: einaregilsson/build-number@v3
        with:
          token: ${{secrets.github_token}}

      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - uses: actions/checkout@v3
      - name: Checkout

      - name: Verify commit exists in origin/main
        run: echo "Going to use ${{ steps.buildnumber.outputs.build_number }} for the package Id."

      - name: Set VERSION variable from tag
        run: echo "0.1.${{ steps.buildnumber.outputs.build_number }}" >> $GITHUB_ENV

      - name: Build
        run: dotnet build ./source/server/Palavyr.API/Palavyr.API.csproj --configuration Release /p:Version=${VERSION}-${GITHUB_REF##*/} --output ./server

      - name: Start Docker environment
        run: docker compose up -d -f docker-compose.ci.yml

      - name: Test
        run: dotnet test ./server/Palavyr.API/Palavyr.API.csproj --verbosity normal

      - name: Delete the test dlls
        run: rm ./server/Palavyr.IntegrationTest.dll ./server/Palavyr.ComponentTests.dll ./server/Palavyr.PureTests.dll

      - name: Zip server into a packaged
        run: zip ./server palavyr.server.{VERSION}.zip

  build-frontend:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v1

      - name: "Install and build"
        working-directory: ./ui/src/
        run: |
          cd ./ui/src
          npm install
          npm run build
          mv ./dist-frontend ../..

      - name: "Zip the distribution"
        working-directory: ${github.GITHUB_WORKSPACE}
        run: zip ./dist-frontend palavyr-frontend.{VERSION}.zip

  build-widget:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v1

      - name: Install and build
      - run: |
          cd ./ui/src
          npm install
          npm run build
          mv ./dist-widget ../..

      - name: Zip the distribution
      - run: zip ./dist-widget palavyr-widget.{VERSION}.zip
