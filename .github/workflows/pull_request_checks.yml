name: Build and Run Tests on pull request
on:
  pull_request:
    branches:
      - main

jobs:
  generate-build-number:
    runs-on: ubuntu-latest
    name: Create next build number
    outputs:
      build_number: 1.${{ steps.buildnumber.outputs.build_number }}-${GITHUB_REF##*/}

    steps:
      - name: Generate build number
        id: buildnumber
        uses: einaregilsson/build-number@v3
        with:
          token: ${{secrets.github_token}}

  build-and-test-server:
    name: Build and test server
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [generate-build-number]

    env:
      STRIPE_API_KEY: ${{secrets.STRIPE_API_KEY}}
      STRIPE_DEVICE_NAME: Palavyr

      Palavyr_AWS__AccessKey: ${{secrets.Palavyr_AWS__AccessKey}}
      Palavyr_AWS__SecretKey: ${{secrets.Palavyr_AWS__SecretKey}}
      Palavyr_AWS__Region: ${{secrets.Palavyr_AWS__Region}}
      Palavyr_ConnectionString: ${{secrets.Palavyr_ConnectionString}}
      Palavyr_Environment: ${{secrets.Palavyr_Environment}}
      Palavyr_JWT__SecretKey: ${{secrets.Palavyr_JWT__SecretKey}}
      Palavyr_STRIPE__SecretKey: ${{secrets.Palavyr_STRIPE__SecretKey}}

    steps:
      - name: Generate build number
        id: buildnumber
        uses: einaregilsson/build-number@v3
        with:
          token: ${{secrets.github_token}}

      - name: Setup dotnet
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x

      - name: Checkout
        uses: actions/checkout@v3

      - name: Build
        run: dotnet build ./server/source/Palavyr.API/Palavyr.API.csproj --configuration Release /p:Version=${{ needs.generate-build-number.outputs.build_number }} --output ./server_output

      - name: Start Docker environment
        run: docker compose up -d -f docker-compose.ci.yml

      - name: Pure Tests
        run: dotnet test ./server_output/Palavyr.PureTests.dll --verbosity normal

      - name: Component Tests
        run: dotnet test ./server_output/Palavyr.ComponentTests.dll --verbosity normal

      - name: Integration Tests
        run: dotnet test ./server_output/Palavyr.IntegrationTests.dll --verbositry normal

      - name: Delete the test dlls
        run: rm ./server/Palavyr.IntegrationTest.dll ./server/Palavyr.ComponentTests.dll ./server/Palavyr.PureTests.dll

      - name: Zip server into a packaged
        run: zip ./server palavyr.server.${{ needs.generate-build-number.outputs.build_number }}.zip

  # build-frontend:
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 5
  #   name: Build frontend
  #   needs: [generate-build-number]

  #   steps:
  #     - name: Set up node
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 12

  #     - name: Checkout repo
  #       uses: actions/checkout@v3

  #     - name: Move into ui dir and install
  #       run: |
  #         cd ./ui
  #         npm ci

  #     - name: Move into ui dir and Build
  #       run: |
  #         cd ./ui
  #         npm run build

  #     - name: Move into ui dir and Zip the distribution
  #       run: |
  #         cd ./ui
  #         ls -lath
  #         zip -r palavyr-frontend.${{ needs.generate-build-number.outputs.build_number }}.zip ./dist-frontend
  #         mv palavyr-frontend.${{ needs.generate-build-number.outputs.build_number }}.zip ${{ github.workspace }}

  # build-widget:
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 5
  #   name: Build widget
  #   needs: [generate-build-number]

  #   steps:
  #     - name: Set up node
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 12

  #     - name: Checkout repo
  #       uses: actions/checkout@v3

  #     - name: Move into ui dir and install
  #       run: |
  #         cd ./ui
  #         npm ci

  #     - name: Move into ui dir and Build
  #       run: |
  #         cd ./ui
  #         npm run build-widget

  #     - name: Move into ui dir and Zip the distribution
  #       run: |
  #         cd ./ui
  #         ls -lath
  #         zip -r palavyr-widget.${{ needs.generate-build-number.outputs.build_number }}.zip ./dist-widget
  #         mv palavyr-widget.${{ needs.generate-build-number.outputs.build_number }}.zip ${{ github.workspace }}
